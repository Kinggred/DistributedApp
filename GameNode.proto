syntax = "proto3";

// Version 4

package networking;
option go_package = "./core/networking";

service LobbySearchService {
        rpc RequestActiveLobbies(LobbyRequest) returns (stream LobbyProposal);
        rpc RequestLobbyJoin(JoinLobbyRequest) returns (JoinLobbyResponse);
        rpc RegisterOwner(RegisterOwnerRequest) returns (RegisterOwnerResponse);
    }
    
// Client requests available lobbies
message LobbyRequest {
        int32 version_main = 1;
        int32 version_min = 2;
        // Possibly an return address?
    }
// Active servers respond
message LobbyProposal {
        string id = 1;
        string name =2;
        Player owner = 3;
        bool is_full = 4;
        bool is_running = 5;
    }

message JoinLobbyRequest {
        Player player = 1;
    }

message JoinLobbyResponse {
        string id = 1;
        string key = 2;
    }

message RegisterOwnerRequest {
        string id = 1;
    }

message RegisterOwnerResponse {
        bool accepted = 1;
    }

message Player {
        string ID = 1;
        string Username = 2;
        int32 Shape = 3;
    }

// service GameService() {
        // TODO: Figure out
//    }
